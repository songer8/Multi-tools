{"ast":null,"code":"var _jsxFileName = \"/Users/songer/projects/my-app/src/components/decode/Decode.jsx\";\nimport { Base64 } from 'js-base64';\nimport React, { Component } from 'react';\nimport './decode.scss';\n\nclass Decode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.encodeBase64 = () => {\n      let result = Base64.encode(this.inputRef.current.value);\n      this.setState({\n        rightValue: result\n      });\n    };\n\n    this.handleRightValueChange = event => {\n      this.setState({\n        rightValue: event.target.value\n      });\n    };\n\n    this.decodeBase64 = () => {\n      let result = Base64.decode(this.inputRef.current.value);\n      this.setState({\n        rightValue: result\n      });\n    };\n\n    this.state = {\n      rightValue: \"\"\n    };\n    this.inputRef = React.createRef();\n    this.outputRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"source\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"\\u8F93\\u5165\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"input\",\n      id: \"source\",\n      cols: \"30\",\n      rows: \"10\",\n      ref: this.inputRef,\n      defaultValue: \"\\u8BF7\\u8F93\\u5165\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"codeButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.encodeBase64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"\\u660E\\u6587\\u8F6CBASE64\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.decodeBase64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"BASE6\\u8F6C\\u660E\\u6587\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, \"\\u8F93\\u51FA\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleRightValueChange,\n      name: \"output\",\n      id: \"result\",\n      cols: \"30\",\n      rows: \"10\",\n      ref: this.outputRef,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      value: this.state.rightValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Decode;","map":{"version":3,"sources":["/Users/songer/projects/my-app/src/components/decode/Decode.jsx"],"names":["Base64","React","Component","Decode","constructor","props","encodeBase64","result","encode","inputRef","current","value","setState","rightValue","handleRightValueChange","event","target","decodeBase64","decode","state","createRef","outputRef","render"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,eAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,YANmB,GAMJ,MAAM;AACjB,UAAIC,MAAM,GAAGP,MAAM,CAACQ,MAAP,CAAc,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAApC,CAAb;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEN;AAAd,OAAd;AACH,KATkB;;AAAA,SAUnBO,sBAVmB,GAUOC,KAAD,IAAW;AAChC,WAAKH,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEE,KAAK,CAACC,MAAN,CAAaL;AAA3B,OAAd;AACH,KAZkB;;AAAA,SAanBM,YAbmB,GAaJ,MAAK;AAChB,UAAIV,MAAM,GAAGP,MAAM,CAACkB,MAAP,CAAc,KAAKT,QAAL,CAAcC,OAAd,CAAsBC,KAApC,CAAb;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAACN;AAAZ,OAAd;AACH,KAhBkB;;AAEf,SAAKY,KAAL,GAAa;AAAEN,MAAAA,UAAU,EAAE;AAAd,KAAb;AACA,SAAKJ,QAAL,GAAgBR,KAAK,CAACmB,SAAN,EAAhB;AACA,SAAKC,SAAL,GAAiBpB,KAAK,CAACmB,SAAN,EAAjB;AACH;;AAYDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAEgB,MAAA,IAAI,EAAC,IAFrB;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,GAAG,EAAE,KAAKb,QAJd;AAKI,MAAA,YAAY,EAAC,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAWI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKH,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKW,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAXJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKH,sBADnB;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,EAAE,EAAC,QAHP;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,IAAI,EAAC,IALT;AAMI,MAAA,GAAG,EAAE,KAAKO,SANd;AAOI,MAAA,WAAW,EAAC,oBAPhB;AAQI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWN,UARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAfJ,CADJ,CADJ;AAiCH;;AApD0B;;AAuD/B,eAAeV,MAAf","sourcesContent":["import { Base64 } from 'js-base64';\nimport React, { Component } from 'react';\n\nimport './decode.scss';\n\nclass Decode extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { rightValue: \"\" }\n        this.inputRef = React.createRef();\n        this.outputRef = React.createRef();\n    }\n    encodeBase64 = () => {\n        let result = Base64.encode(this.inputRef.current.value);\n        this.setState({ rightValue: result });\n    }\n    handleRightValueChange = (event) => {\n        this.setState({ rightValue: event.target.value })\n    }\n    decodeBase64 = () =>{\n        let result = Base64.decode(this.inputRef.current.value);\n        this.setState({rightValue:result});\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div>\n                        <label htmlFor=\"source\">输入</label>\n                        <textarea\n                            name=\"input\"\n                            id=\"source\" cols=\"30\"\n                            rows=\"10\"\n                            ref={this.inputRef}\n                            defaultValue=\"请输入\">\n                        </textarea>\n                    </div>\n                    <div className=\"codeButton\">\n                        <button onClick={this.encodeBase64}>明文转BASE64</button>\n                        <button onClick={this.decodeBase64}>BASE6转明文</button>\n                    </div>\n                    <div>\n                        <label htmlFor=\"result\">输出</label>\n                        <textarea\n                            onChange={this.handleRightValueChange}\n                            name=\"output\"\n                            id=\"result\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            ref={this.outputRef}\n                            placeholder=\"请输入\"\n                            value={this.state.rightValue}>\n                        </textarea>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Decode;"]},"metadata":{},"sourceType":"module"}